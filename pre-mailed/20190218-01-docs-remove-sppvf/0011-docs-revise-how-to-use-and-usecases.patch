From 6232a753b0d9406c9d8d4f11e894fe33858a4d5d Mon Sep 17 00:00:00 2001
From: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>
Date: Mon, 18 Feb 2019 11:10:15 +0900
Subject: [PATCH 11/20] docs: revise how to use and usecases

* Add short overviews for each of sec processes.

* Add descs for editing XML config for virsh.

Signed-off-by: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>
---
 docs/guides/gsg/howto_use.rst        | 29 +++++++++++++----------------
 docs/guides/use_cases/spp_mirror.rst | 34 +++++++++++++++-------------------
 2 files changed, 28 insertions(+), 35 deletions(-)

diff --git a/docs/guides/gsg/howto_use.rst b/docs/guides/gsg/howto_use.rst
index 749f8ba..09e11b8 100644
--- a/docs/guides/gsg/howto_use.rst
+++ b/docs/guides/gsg/howto_use.rst
@@ -335,17 +335,15 @@ SPP Secondary
 
 Secondary process behaves as a client of primary process and a worker
 for doing tasks for packet processing. There are several kinds of secondary
-process, for example, simply forwarding between ports or classsifying
-by referring packet header.
-
-This section describes about the simplest ``spp_nfv`` which simply forward
-packets similar to ``l2fwd``.
+process, for example, simply forwarding between ports, classsifying packets
+by referring its header or duplicate packets for redundancy.
 
 
 spp_nfv
 ~~~~~~~
 
-Run ``spp_nfv`` with options.
+Run ``spp_nfv`` with options which simply forward packets as similar
+as ``l2fwd``.
 
 .. code-block:: console
 
@@ -381,7 +379,7 @@ See also `Vhost Sample Application
 spp_vf
 ~~~~~~
 
-``spp_vf`` is a kind of secondary process.
+``spp_vf`` is a kind of secondary process for classify or merge packets.
 
 .. code-block:: console
 
@@ -404,8 +402,8 @@ options of ``spp_vf``.
 spp_mirror
 ~~~~~~~~~~
 
-``spp_mirror`` is a kind of secondary process, and options are same as
-``spp_vf``.
+``spp_mirror`` is a kind of secondary process for duplicating packets,
+and options are same as ``spp_vf``.
 
 .. code-block:: console
 
@@ -430,7 +428,8 @@ options of ``spp_mirror``.
 spp_pcap
 ~~~~~~~~
 
-``spp_pcap`` is a kind of secondary process.
+Other than PCAP feature implemented as pcap port in ``spp_nfv``,
+SPP provides ``spp_pcap`` for capturing comparatively heavy traffic.
 
 .. code-block:: console
 
@@ -779,13 +778,11 @@ In addition, you need to add attributes for specific resources for DPDK and SPP.
 * ``<qemu:commandline>``
 
 Take care about the index numbers of devices should be the same value such as
-``chr0`` or ``sock0``. It is referred as ID of vhost port from SPP.
-
-MAC address used in
-can be specified when registering MAC address to classifier
-using Secondary command.
+``chr0`` or ``sock0`` in ``virtio-net-pci`` device. This index is referred as
+ID of vhost port from SPP. MAC address defined in the attribute is used while
+registering destinations for classifier's table.
 
-.. code-block:: none
+.. code-block:: xml
 
     <qemu:arg value='virtio-net-pci,netdev=vhost-net0,mac=52:54:00:12:34:56'/>
 
diff --git a/docs/guides/use_cases/spp_mirror.rst b/docs/guides/use_cases/spp_mirror.rst
index dac565f..3a9f17b 100644
--- a/docs/guides/use_cases/spp_mirror.rst
+++ b/docs/guides/use_cases/spp_mirror.rst
@@ -197,23 +197,6 @@ You use ``spp_mirror`` for copying, and ``spp_vf`` classifying packets.
    Monitoring with spp_mirror
 
 
-Network Configuration
-~~~~~~~~~~~~~~~~~~~~~
-
-Detailed configuration of :numref:`figure_usecase_monitor_overview`
-is described in :numref:`figure_usecase_monitor_nwconfig`.
-In this senario, worker thread ``mir1`` copies incoming packets
-from though ``ring:0``.
-Then, sends to orignal destination ``VM1`` and anohter one ``VM3``.
-
-.. _figure_usecase_monitor_nwconfig:
-
-.. figure:: ../images/spp_vf/spp_mirror_usecase_nwconfig.*
-     :width: 80%
-
-     Network configuration of monitoring packets
-
-
 Setup SPP and VMs
 ~~~~~~~~~~~~~~~~~
 
@@ -249,8 +232,21 @@ Start spp_primary with core list option ``-l 1``.
         -n 10 -s 192.168.1.100:5555
 
 
-Launch spp_vf
-~~~~~~~~~~~~~
+Netowrk Configuration
+~~~~~~~~~~~~~~~~~~~~~
+
+Detailed configuration of :numref:`figure_usecase_monitor_overview`
+is described in :numref:`figure_usecase_monitor_nwconfig`.
+In this senario, worker thread ``mir1`` copies incoming packets
+from though ``ring:0``.
+Then, sends to orignal destination ``VM1`` and anohter one ``VM3``.
+
+.. _figure_usecase_monitor_nwconfig:
+
+.. figure:: ../images/spp_vf/spp_mirror_usecase_nwconfig.*
+     :width: 80%
+
+     Network configuration of monitoring packets
 
 Launch ``VM1``, ``VM2`` and ``spp_vf`` with core list ``-l 0,2-8``.
 
-- 
2.7.4

