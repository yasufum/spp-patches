X-Account-Key: account5
X-UIDL: GmailId16b0d18cb28a2db8
X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                 
Delivered-To: yasufum.o@gmail.com
Received: by 2002:a19:dc05:0:0:0:0:0 with SMTP id t5csp370302lfg;
        Fri, 31 May 2019 01:54:17 -0700 (PDT)
X-Google-Smtp-Source: APXvYqzJf0RZ4oJWtdeJuC7nrSSfYdMuW08gsdPAARe6n4dMYn3dC59OxQHB/fPlPjKNYj/vxrF3
X-Received: by 2002:a05:6402:1612:: with SMTP id f18mr9972662edv.295.1559292857146;
        Fri, 31 May 2019 01:54:17 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1559292857; cv=none;
        d=google.com; s=arc-20160816;
        b=EdjQG8QY5rJwqQOjWMHotYczSN8pTY8KG7DJbwP9I/0MqNXFtlo+CGCUU416BsJuy4
         fN5rMs6TJdfe936a+pQxN1i1n6btdcTL/Oyzqke/CElAUtT8G1LFfgBBeRlBHLB57A0h
         gignbey0HdNN+XLbPKXtPZ9V8rQP3YiI4BmtwaPc656DJ4psrG5tMCWZjR03J8AnElzt
         S/YIGE1tUHL4mxq5oWS7yw3hAbVj2xUhZXR97soS21inRfE+T2sX6B23JXho9Igt5vWM
         Pz8X6lYs9h9zzzNAH5s87a+6YoNwOK9bOkZ53sX8/UliwG6lGO2nNTqYKtv00nqWhWzx
         VFUg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=sender:errors-to:list-subscribe:list-help:list-post:list-archive
         :list-unsubscribe:list-id:precedence:subject:references:in-reply-to
         :message-id:date:to:from;
        bh=Tr3PBmKXVRffBg3xX4MESQ+rWFsfUXnZRKZXVDFcqrw=;
        b=II65z8KkyOaxfMygbPRvW05QHpsuvnImRBxYGc/zE99o07Szft8kPNr0Dqc3nIYIxb
         1g6x6ru2u3NlhBUj2tVUh1W4U6sw6Xr/paKaqGr2GnGUXtopBZUHFOxlPr8U3wD32xIj
         4bq0NYMU26S63EmIEFbzyTeNN71qFQbB0/yF7Jb2HiyP0Yr2EUaNmKkMeDHMw7Itb61V
         Q3gPqdx/CEQdhBKYoHHJEdTqmyDlN+7laj+0ai1NM8wfUwanZviZjXwCaGClr1BGbdKM
         x2HGK6zq7miIBaq2/QJFPQ/DsD2Wa4R6ct0MZYYBxing0EssOsCEUUtxXCQZMK4K2T7l
         +uHQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: domain of spp-bounces@dpdk.org designates 92.243.14.124 as permitted sender) smtp.mailfrom=spp-bounces@dpdk.org
Return-Path: <spp-bounces@dpdk.org>
Received: from dpdk.org (dpdk.org. [92.243.14.124])
        by mx.google.com with ESMTP id e2si3493778ejt.101.2019.05.31.01.54.16;
        Fri, 31 May 2019 01:54:17 -0700 (PDT)
Received-SPF: pass (google.com: domain of spp-bounces@dpdk.org designates 92.243.14.124 as permitted sender) client-ip=92.243.14.124;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of spp-bounces@dpdk.org designates 92.243.14.124 as permitted sender) smtp.mailfrom=spp-bounces@dpdk.org
Received: from [92.243.14.124] (localhost [127.0.0.1])
	by dpdk.org (Postfix) with ESMTP id BC9B71B94C;
	Fri, 31 May 2019 10:54:15 +0200 (CEST)
Received: from tama500.ecl.ntt.co.jp (tama500.ecl.ntt.co.jp [129.60.39.148])
 by dpdk.org (Postfix) with ESMTP id 2BD1A493D
 for <spp@dpdk.org>; Fri, 31 May 2019 10:54:13 +0200 (CEST)
Received: from vc1.ecl.ntt.co.jp (vc1.ecl.ntt.co.jp [129.60.86.153])
 by tama500.ecl.ntt.co.jp (8.13.8/8.13.8) with ESMTP id x4V8sCkF000684;
 Fri, 31 May 2019 17:54:12 +0900
Received: from vc1.ecl.ntt.co.jp (localhost [127.0.0.1])
 by vc1.ecl.ntt.co.jp (Postfix) with ESMTP id 96FE2EA85FD;
 Fri, 31 May 2019 17:54:12 +0900 (JST)
Received: from localhost.localdomain (lobster.nslab.ecl.ntt.co.jp
 [129.60.13.95])
 by vc1.ecl.ntt.co.jp (Postfix) with ESMTP id 825C6EA8606;
 Fri, 31 May 2019 17:54:12 +0900 (JST)
From: ogawa.yasufumi@lab.ntt.co.jp
To: spp@dpdk.org, ferruh.yigit@intel.com, ogawa.yasufumi@lab.ntt.co.jp
Date: Fri, 31 May 2019 17:51:33 +0900
Message-Id: <1559292699-26940-4-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1559292699-26940-1-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
References: <1559292699-26940-1-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
X-TM-AS-MML: disable
Subject: [spp] [PATCH 3/9] spp_pcap: refactor parse error code
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-To: spp-bounces@dpdk.org
Sender: "spp" <spp-bounces@dpdk.org>

From: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>

Revise the name of enum `spp_comamnd_decode_error_code` to
`sppwk_parse_error_code`, and its members to be more reasonable.

Signed-off-by: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>
---
 src/pcap/cmd_parser.c |  6 +++---
 src/pcap/cmd_parser.h | 12 ++++++------
 src/pcap/cmd_runner.c | 21 +++++++++++----------
 3 files changed, 20 insertions(+), 19 deletions(-)

diff --git a/src/pcap/cmd_parser.c b/src/pcap/cmd_parser.c
index 6734c1e..e7ad50e 100644
--- a/src/pcap/cmd_parser.c
+++ b/src/pcap/cmd_parser.c
@@ -32,7 +32,7 @@ set_string_value_parse_error(struct spp_command_parse_error *error,
 		const char *value, const char *error_name)
 {
 	strcpy(error->value, value);
-	return set_parse_error(error, BAD_VALUE, error_name);
+	return set_parse_error(error, SPPWK_PARSE_INVALID_VALUE, error_name);
 }
 
 /* Split command line parameter with spaces */
@@ -102,7 +102,7 @@ parse_command_in_list(struct spp_command_request *request,
 	if (ret < SPP_RET_OK) {
 		RTE_LOG(ERR, SPP_COMMAND_DEC, "Parameter number over limit."
 				"request_str=%s\n", request_str);
-		return set_parse_error(error, BAD_FORMAT, NULL);
+		return set_parse_error(error, SPPWK_PARSE_WRONG_FORMAT, NULL);
 	}
 	RTE_LOG(DEBUG, SPP_COMMAND_DEC, "Decode array. num=%d\n", argc);
 
@@ -128,7 +128,7 @@ parse_command_in_list(struct spp_command_request *request,
 	if (command_name_check != 0) {
 		RTE_LOG(ERR, SPP_COMMAND_DEC, "Parameter number out of range."
 				"request_str=%s\n", request_str);
-		return set_parse_error(error, BAD_FORMAT, NULL);
+		return set_parse_error(error, SPPWK_PARSE_WRONG_FORMAT, NULL);
 	}
 
 	RTE_LOG(ERR, SPP_COMMAND_DEC,
diff --git a/src/pcap/cmd_parser.h b/src/pcap/cmd_parser.h
index 84f7ae6..3893214 100644
--- a/src/pcap/cmd_parser.h
+++ b/src/pcap/cmd_parser.h
@@ -27,13 +27,13 @@
 #define SPP_CMD_VALUE_BUFSZ 111
 
 /** parse error code */
-enum spp_command_parse_error_code {
+enum sppwk_parse_error_code {
 	/* not use 0, in general 0 is OK */
-	BAD_FORMAT = 1,  /**< Wrong format */
-	UNKNOWN_COMMAND, /**< Unknown command */
-	NO_PARAM,        /**< No parameters */
-	BAD_TYPE,        /**< Wrong data type */
-	BAD_VALUE,       /**< Wrong value */
+	SPPWK_PARSE_WRONG_FORMAT = 1,  /**< Wrong format */
+	SPPWK_PARSE_UNKNOWN_CMD,  /**< Unknown command */
+	SPPWK_PARSE_NO_PARAM,  /**< No parameters */
+	SPPWK_PARSE_INVALID_TYPE,  /**< Wrong data type */
+	SPPWK_PARSE_INVALID_VALUE,  /**< Wrong value */
 };
 
 /**
diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index f51b819..44d00ae 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -276,26 +276,27 @@ parse_error_message(
 		char *message)
 {
 	switch (parse_error->code) {
-	case BAD_FORMAT:
-		sprintf(message, "bad message format");
+	case SPPWK_PARSE_WRONG_FORMAT:
+		sprintf(message, "Wrong message format");
 		break;
 
-	case UNKNOWN_COMMAND:
-		sprintf(message, "unknown command(%s)", parse_error->value);
+	case SPPWK_PARSE_UNKNOWN_CMD:
+		/* TODO(yasufum) Fix compile err if space exists before "(" */
+		sprintf(message, "Unknown command(%s)", parse_error->value);
 		break;
 
-	case NO_PARAM:
-		sprintf(message, "not enough parameter(%s)",
+	case SPPWK_PARSE_NO_PARAM:
+		sprintf(message, "No or insufficient number of params (%s)",
 				parse_error->value_name);
 		break;
 
-	case BAD_TYPE:
-		sprintf(message, "bad value type(%s)",
+	case SPPWK_PARSE_INVALID_TYPE:
+		sprintf(message, "Invalid value type (%s)",
 				parse_error->value_name);
 		break;
 
-	case BAD_VALUE:
-		sprintf(message, "bad value(%s)", parse_error->value_name);
+	case SPPWK_PARSE_INVALID_VALUE:
+		sprintf(message, "Invalid value (%s)", parse_error->value_name);
 		break;
 
 	default:
-- 
2.17.1


