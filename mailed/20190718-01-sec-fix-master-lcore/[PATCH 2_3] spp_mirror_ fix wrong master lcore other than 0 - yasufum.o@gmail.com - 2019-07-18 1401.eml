X-Account-Key: account5
X-UIDL: GmailId16c0374ddb667443
X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                 
Return-Path: <yasufum.o@gmail.com>
Received: from localhost.localdomain ([192.47.164.146])
        by smtp.gmail.com with ESMTPSA id k25sm18958372pgt.53.2019.07.17.22.01.25
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 17 Jul 2019 22:01:25 -0700 (PDT)
From: yasufum.o@gmail.com
To: spp@dpdk.org,
	ferruh.yigit@intel.com,
	yasufum.o@gmail.com
Subject: [PATCH 2/3] spp_mirror: fix wrong master lcore other than 0
Date: Thu, 18 Jul 2019 14:01:18 +0900
Message-Id: <20190718050119.6822-3-yasufum.o@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190718050119.6822-1-yasufum.o@gmail.com>
References: <20190718050119.6822-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

As previous patch, fix assigning wrong master lcore by moving
rte_eal_init() before rte_get_master_lcore().

Fixes: 310c51b918e9 ("spp_vf: initialize variable master_lcore")

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 5cee655..4b62349 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -484,7 +484,7 @@ slave_main(void *arg __attribute__ ((unused)))
 int
 main(int argc, char *argv[])
 {
-	int ret = SPP_RET_NG;
+	int ret;
 	char ctl_ip[IPADDR_LEN] = { 0 };
 	int ctl_port;
 	int ret_cmd_init;
@@ -505,20 +505,24 @@ main(int argc, char *argv[])
 	signal(SIGTERM, stop_process);
 	signal(SIGINT,  stop_process);
 
+	ret = rte_eal_init(argc, argv);
+	if (unlikely(ret < 0))
+		rte_exit(EXIT_FAILURE, "Invalid EAL arguments.\n");
+
+	argc -= ret;
+	argv += ret;
+
 	/**
 	 * It should be initialized outside of while loop, or failed to
 	 * compile because it is referred when finalize `g_core_info`.
 	 */
 	master_lcore = rte_get_master_lcore();
 
+	/**
+	 * If any failure is occured in the while block, break to go the end
+	 * of the block to finalize.
+	 */
 	while (1) {
-		int ret_dpdk = rte_eal_init(argc, argv);
-		if (unlikely(ret_dpdk < 0))
-			break;
-
-		argc -= ret_dpdk;
-		argv += ret_dpdk;
-
 		/* Parse spp_mirror specific parameters */
 		int ret_parse = parse_app_args(argc, argv);
 		if (unlikely(ret_parse != 0))
-- 
2.17.1


