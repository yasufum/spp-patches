X-Account-Key: account3
X-UIDL: f87b7c323938d25c5e830000676ddb7c
X-Mozilla-Status: 0001
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                 
Return-Path: <spp-bounces@dpdk.org>
Delivered-To: geminoa@juno.ocn.ne.jp
Received: from md-drt-nw102 ([153.138.216.231])
	by md-bnd-nw106 with LMTP id OFAPJzk40lxegwAAZ23bfA
	for <geminoa@juno.ocn.ne.jp>; Wed, 08 May 2019 11:00:25 +0900
Received: from md-lpx-cb001 ([153.138.216.231])
	by md-drt-nw102 with LMTP id uHOsGDk40lxEFQAA8iqT2w
	; Wed, 08 May 2019 11:00:25 +0900
Received: from md-mta-nw003.ocn.ad.jp ([153.138.216.231])
	by md-lpx-cb001 with LMTP id qJNcEjk40lxbdgAA9RM4zw
	; Wed, 08 May 2019 11:00:25 +0900
Received: from mfgw701.ocn.ad.jp (mfgw701.ocn.ad.jp [153.153.63.99])
	by md-mta-nw003.ocn.ad.jp (Postfix) with ESMTP id 3D88C3C000211
	for <geminoa@juno.ocn.ne.jp>; Wed,  8 May 2019 11:00:25 +0900 (JST)
Received-SPF: pass (mf-ofc-ucb070: domain designate client-ip as permitted sender) client-ip=92.243.14.124; envelope-from=<spp-bounces@dpdk.org>; helo=dpdk.org;
Authentication-Results: mf-ofc-ucb070; spf=pass smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])
	by mfgw701.ocn.ad.jp (Postfix) with ESMTP id 79D2BD40286
	for <geminoa@juno.ocn.ne.jp>; Wed,  8 May 2019 11:00:24 +0900 (JST)
Received: from [92.243.14.124] (localhost [127.0.0.1])
	by dpdk.org (Postfix) with ESMTP id 0DD541F28;
	Wed,  8 May 2019 04:00:22 +0200 (CEST)
Received: from tama50.ecl.ntt.co.jp (tama50.ecl.ntt.co.jp [129.60.39.147])
 by dpdk.org (Postfix) with ESMTP id 168C2A49
 for <spp@dpdk.org>; Wed,  8 May 2019 04:00:19 +0200 (CEST)
Received: from vc2.ecl.ntt.co.jp (vc2.ecl.ntt.co.jp [129.60.86.154])
 by tama50.ecl.ntt.co.jp (8.13.8/8.13.8) with ESMTP id x4820Hce016010;
 Wed, 8 May 2019 11:00:17 +0900
Received: from vc2.ecl.ntt.co.jp (localhost [127.0.0.1])
 by vc2.ecl.ntt.co.jp (Postfix) with ESMTP id 362D7637FDC;
 Wed,  8 May 2019 11:00:17 +0900 (JST)
Received: from localhost.localdomain (lobster.nslab.ecl.ntt.co.jp
 [129.60.13.95])
 by vc2.ecl.ntt.co.jp (Postfix) with ESMTP id 204B4637FB5;
 Wed,  8 May 2019 11:00:17 +0900 (JST)
From: ogawa.yasufumi@lab.ntt.co.jp
To: spp@dpdk.org, ferruh.yigit@intel.com, ogawa.yasufumi@lab.ntt.co.jp
Date: Wed,  8 May 2019 10:57:51 +0900
Message-Id: <1557280671-7416-1-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
X-Mailer: git-send-email 2.7.4
X-TM-AS-MML: disable
Subject: [spp] [PATCH] tools/helpers: refactor cpu_layout script
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-To: spp-bounces@dpdk.org
Sender: "spp" <spp-bounces@dpdk.org>

From: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>

Update cpu_layout.py to comply with pep3.

Signed-off-by: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>
---
 tools/helpers/cpu_layout.py | 27 +++++++++++++--------------
 1 file changed, 13 insertions(+), 14 deletions(-)

diff --git a/tools/helpers/cpu_layout.py b/tools/helpers/cpu_layout.py
index 58a2bd6..bf86583 100755
--- a/tools/helpers/cpu_layout.py
+++ b/tools/helpers/cpu_layout.py
@@ -7,41 +7,40 @@
 from __future__ import print_function
 import argparse
 import json
-import sys
+
 try:
     xrange  # Python 2
 except NameError:
     xrange = range  # Python 3
 
-base_path = "/sys/devices/system/cpu"
+BASE_PATH = "/sys/devices/system/cpu"
 
 
 def parse_args():
     parser = argparse.ArgumentParser(
         description="Show CPU layout")
-
     parser.add_argument(
-            "--json", action="store_true",
-            help="Output in JSON format")
+        "--json", action="store_true",
+        help="Output in JSON format")
     return parser.parse_args()
 
 
 def get_max_cpus():
-    fd = open("{}/kernel_max".format(base_path))
+    fd = open("{}/kernel_max".format(BASE_PATH))
     max_cpus = int(fd.read())
     fd.close()
     return max_cpus
 
 
 def get_resource_info(max_cpus):
-    """Return a set of sockets, cores and core_map as a tuple."""
+    """Return a set of sockets, cores and core_map as tuple."""
     sockets = []
     cores = []
     core_map = {}
 
     for cpu in xrange(max_cpus + 1):
         try:
-            topo_path = "{}/cpu{}/topology".format(base_path, cpu)
+            topo_path = "{}/cpu{}/topology".format(BASE_PATH, cpu)
 
             # Get physical core ID.
             fd = open("{}/core_id".format(topo_path))
@@ -72,10 +71,10 @@ def get_resource_info(max_cpus):
 
 
 def print_header(cores, sockets):
-    print(format("=" * (47 + len(base_path))))
+    print(format("=" * (47 + len(BASE_PATH))))
     print("Core and Socket Information (as reported by '{}')".format(
-        base_path))
-    print("{}\n".format("=" * (47 + len(base_path))))
+        BASE_PATH))
+    print("{}\n".format("=" * (47 + len(BASE_PATH))))
     print("cores = ", cores)
     print("sockets = ", sockets)
     print("")
@@ -92,7 +91,7 @@ def print_body(cores, sockets, core_map):
     output = " ".ljust(max_core_id_len + len('Core '))
     for s in sockets:
         output += " Socket %s" % str(s).ljust(
-                max_core_map_len - len('Socket '))
+            max_core_map_len - len('Socket '))
     print(output)
 
     output = " ".ljust(max_core_id_len + len('Core '))
@@ -115,10 +114,10 @@ def core_map_to_json(core_map):
     cpu_layout = []
     cpu_sockets = {}
     for (s, c), cpus in core_map.items():
-        if not (s in cpu_sockets):
+        if not s in cpu_sockets:
             cpu_sockets[s] = {}
             cpu_sockets[s]["cores"] = []
-        cpu_sockets[s]["cores"].append({"core_id": c, "cpus": cpus})
+        cpu_sockets[s]["cores"].append({"core_id": c, "lcores": cpus})
 
     for sid, val in cpu_sockets.items():
         cpu_layout.append({"socket_id": sid, "cores": val["cores"]})
-- 
2.17.1


