X-Account-Key: account1
X-UIDL: 13849.hhwNjT0Yl45qL4NLpfwytONq1Fg=
X-Mozilla-Status: 0001
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                 
Return-Path: spp-bounces@dpdk.org
Received: from md-lpx-nw008.ocn.ad.jp (LHLO md-lpx-nw008) (153.138.217.81)
 by mzcstore251.ocn.ad.jp with LMTP; Thu, 31 Jan 2019 20:05:22 +0900 (JST)
Received: from md-mta-nw004.ocn.ad.jp ([153.138.216.232])
	by md-lpx-nw008 with LMTP id CLDSC3LWUlyhIQAAqFjg7g
	; Thu, 31 Jan 2019 20:05:22 +0900
Received: from mfgw712.ocn.ad.jp (mfgw712.ocn.ad.jp [153.153.63.104])
	by md-mta-nw004.ocn.ad.jp (Postfix) with ESMTP id 290E13C00022F
	for <geminoa@juno.ocn.ne.jp>; Thu, 31 Jan 2019 20:05:22 +0900 (JST)
Received-SPF: pass (mf-ofc-ucb071: domain designate client-ip as permitted sender) client-ip=92.243.14.124; envelope-from=<spp-bounces@dpdk.org>; helo=dpdk.org;
Authentication-Results: mf-ofc-ucb071; spf=pass smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])
	by mfgw712.ocn.ad.jp (Postfix) with ESMTP id 92374500271
	for <geminoa@juno.ocn.ne.jp>; Thu, 31 Jan 2019 20:05:21 +0900 (JST)
Received: from [92.243.14.124] (localhost [127.0.0.1])
	by dpdk.org (Postfix) with ESMTP id A7EB71B44A;
	Thu, 31 Jan 2019 12:05:20 +0100 (CET)
Received: from tama50.ecl.ntt.co.jp (tama50.ecl.ntt.co.jp [129.60.39.147])
 by dpdk.org (Postfix) with ESMTP id 60FB41B43F
 for <spp@dpdk.org>; Thu, 31 Jan 2019 12:05:18 +0100 (CET)
Received: from vc2.ecl.ntt.co.jp (vc2.ecl.ntt.co.jp [129.60.86.154])
 by tama50.ecl.ntt.co.jp (8.13.8/8.13.8) with ESMTP id x0VB5HnK005285;
 Thu, 31 Jan 2019 20:05:17 +0900
Received: from vc2.ecl.ntt.co.jp (localhost [127.0.0.1])
 by vc2.ecl.ntt.co.jp (Postfix) with ESMTP id 48EA96396F9;
 Thu, 31 Jan 2019 20:05:17 +0900 (JST)
Received: from localhost.localdomain (lobster.nslab.ecl.ntt.co.jp
 [129.60.13.95])
 by vc2.ecl.ntt.co.jp (Postfix) with ESMTP id 3ABC263965A;
 Thu, 31 Jan 2019 20:05:17 +0900 (JST)
From: ogawa.yasufumi@lab.ntt.co.jp
To: ferruh.yigit@intel.com, spp@dpdk.org, ogawa.yasufumi@lab.ntt.co.jp
Date: Thu, 31 Jan 2019 20:03:07 +0900
Message-Id: <1548932589-21099-3-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1548932589-21099-1-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
References: <1548932589-21099-1-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
X-TM-AS-MML: disable
Subject: [spp] [PATCH 2/4] docs: add launch of primary to REST API reference
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-To: spp-bounces@dpdk.org
Sender: "spp" <spp-bounces@dpdk.org>

From: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>

This patch is to add `launch` API for spp_primary which is for launching
a secondary process via REST API.

Signed-off-by: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>
---
 docs/guides/api_ref/spp_primary.rst | 94 +++++++++++++++++++++++++++++++++++++
 1 file changed, 94 insertions(+)

diff --git a/docs/guides/api_ref/spp_primary.rst b/docs/guides/api_ref/spp_primary.rst
index e46de21..3cbad10 100644
--- a/docs/guides/api_ref/spp_primary.rst
+++ b/docs/guides/api_ref/spp_primary.rst
@@ -174,3 +174,97 @@ Response
 ~~~~~~~~
 
 There is no body content for the response of a successful ``DELETE`` request.
+
+
+PUT /v1/primary/launch
+----------------------
+
+Launch a secondary process.
+
+* Normal response codes: 204
+* Error response codes: 400, 404
+
+
+Request (path)
+~~~~~~~~~~~~~~
+
+There is no params in this API.
+
+
+Request (body)
+~~~~~~~~~~~~~~
+
+There are four params for launching secondary process. ``eal`` object
+contains a set of EAL options, and ``app`` contains options of teh process.
+
+.. _table_spp_ctl_spp_primary_launch_body:
+
+.. table:: Request body params for launch secondary for spp_primary.
+
+    +-----------+---------+-------------------------------------------------+
+    | Name      | Type    | Description                                     |
+    |           |         |                                                 |
+    +===========+=========+=================================================+
+    | proc_name | string  | Process name such as ``spp_nfv`` or ``spp_vf``. |
+    +-----------+---------+-------------------------------------------------+
+    | client_id | integer | Secondary ID for the process.                   |
+    +-----------+---------+-------------------------------------------------+
+    | eal       | object  | Hash obj of DPDK's EAL options.                 |
+    +-----------+---------+-------------------------------------------------+
+    | app       | object  | Hash obj of options of secondary process.       |
+    +-----------+---------+-------------------------------------------------+
+
+``eal`` object is a hash of EAL options and its values. All of EAL options
+are referred in
+`EAL parameters
+<https://doc.dpdk.org/guides/linux_gsg/linux_eal_parameters.html>`_
+in DPDK's
+`Getting Started Guide for Linux
+<https://doc.dpdk.org/guides/linux_gsg/index.html>`_.
+
+``app`` object is a hash of options of secondary process, and you can refer
+options of each of processes in
+`How to Use
+<https://spp-tmp.readthedocs.io/en/latest/setup/howto_use.html>`_
+section.
+
+
+Request example
+~~~~~~~~~~~~~~~
+
+Launch ``spp_nfv`` with secondary ID 1 and lcores ``1,2``.
+
+.. code-block:: console
+
+    $ curl -X PUT -H 'application/json' \
+      -d "{'proc_name': 'spp_nfv', 'client_id': '1', \
+        'eal': {'-m': '512', '-l': '1,2', '--proc-type': 'secondary'}, \
+        'app': {'-s': '192.168.11.59:6666', '-n': '1'}}"
+      http://127.0.0.1:7777/v1/primary/launch
+
+Launch ``spp_vf`` with secondary ID 2 and lcores ``1,4-7``.
+
+.. code-block:: console
+
+    $ curl -X PUT -H 'application/json' \
+      -d "{'proc_name': 'spp_vf', 'client_id': '2', \
+        'eal': {'-m': '512', '-l': '1,4-7', '--proc-type': 'secondary'}, \
+        'app': {'-s': '192.168.11.59:6666', '--client-id': '2'}}"
+      http://127.0.0.1:7777/v1/primary/launch
+
+
+Response
+~~~~~~~~
+
+There is no body content for the response of a successful ``PUT`` request.
+
+
+Equivalent CLI command
+~~~~~~~~~~~~~~~~~~~~~~
+
+``proc_type`` is ``nfv``, ``vf`` or ``mirror`` or so.
+``eal_opts`` and ``app_opts`` are the same as launching from command line.
+
+.. code-block:: none
+
+    pri; launch {proc_type} {sec_id} {eal_opts} -- {app_opts}
-- 
2.7.4


