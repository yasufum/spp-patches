X-Account-Key: account3
X-UIDL: 7035cb071139d25c65830000676ddb7c
X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                 
Return-Path: <spp-bounces@dpdk.org>
Delivered-To: geminoa@juno.ocn.ne.jp
Received: from md-drt-nw105 ([153.138.217.134])
	by md-bnd-nw106 with LMTP id 4E+kAxE50lxlgwAAZ23bfA
	for <geminoa@juno.ocn.ne.jp>; Wed, 08 May 2019 11:04:01 +0900
Received: from md-lpx-nw004 ([153.138.217.134])
	by md-drt-nw105 with LMTP id cCeSAxE50lxfBwAAqrOKOQ
	; Wed, 08 May 2019 11:04:01 +0900
Received: from md-mta-nw007.ocn.ad.jp ([153.138.217.134])
	by md-lpx-nw004 with LMTP id OFg/AxE50lxvHQAAxo9yvA
	; Wed, 08 May 2019 11:04:01 +0900
Received: from mfgw712.ocn.ad.jp (mfgw712.ocn.ad.jp [153.153.63.104])
	by md-mta-nw007.ocn.ad.jp (Postfix) with ESMTP id 02F073C000210
	for <geminoa@juno.ocn.ne.jp>; Wed,  8 May 2019 11:04:01 +0900 (JST)
Received-SPF: pass (mf-ofc-ucb071: domain designate client-ip as permitted sender) client-ip=92.243.14.124; envelope-from=<spp-bounces@dpdk.org>; helo=dpdk.org;
Authentication-Results: mf-ofc-ucb071; spf=pass smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])
	by mfgw712.ocn.ad.jp (Postfix) with ESMTP id E8C26500074
	for <geminoa@juno.ocn.ne.jp>; Wed,  8 May 2019 11:03:59 +0900 (JST)
Received: from [92.243.14.124] (localhost [127.0.0.1])
	by dpdk.org (Postfix) with ESMTP id 41A054F91;
	Wed,  8 May 2019 04:03:58 +0200 (CEST)
Received: from tama500.ecl.ntt.co.jp (tama500.ecl.ntt.co.jp [129.60.39.148])
 by dpdk.org (Postfix) with ESMTP id 2D99A37A2
 for <spp@dpdk.org>; Wed,  8 May 2019 04:03:53 +0200 (CEST)
Received: from vc1.ecl.ntt.co.jp (vc1.ecl.ntt.co.jp [129.60.86.153])
 by tama500.ecl.ntt.co.jp (8.13.8/8.13.8) with ESMTP id x4823rrr023087;
 Wed, 8 May 2019 11:03:53 +0900
Received: from vc1.ecl.ntt.co.jp (localhost [127.0.0.1])
 by vc1.ecl.ntt.co.jp (Postfix) with ESMTP id F095AEA407F;
 Wed,  8 May 2019 11:03:52 +0900 (JST)
Received: from localhost.localdomain (lobster.nslab.ecl.ntt.co.jp
 [129.60.13.95])
 by vc1.ecl.ntt.co.jp (Postfix) with ESMTP id B0EFFEA7086;
 Wed,  8 May 2019 11:03:52 +0900 (JST)
From: ogawa.yasufumi@lab.ntt.co.jp
To: spp@dpdk.org, ferruh.yigit@intel.com, ogawa.yasufumi@lab.ntt.co.jp
Date: Wed,  8 May 2019 11:01:33 +0900
Message-Id: <1557280895-7978-16-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1557280895-7978-1-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
References: <1557280895-7978-1-git-send-email-ogawa.yasufumi@lab.ntt.co.jp>
X-TM-AS-MML: disable
Subject: [spp] [PATCH 15/17] shared/sec: rename dpdk_port attr
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-To: spp-bounces@dpdk.org
Sender: "spp" <spp-bounces@dpdk.org>

From: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>

`dpdk_port` defined in struct `sppwk_port_info` is a port ID provided by
RTE ethdev library and the name is not appropriate. This update is to
rename the attribute to `ethdev_port_id` instead.

Signed-off-by: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>
---
 src/mirror/spp_mirror.c                       | 12 +++----
 .../secondary/spp_worker_th/command_proc.c    |  8 ++---
 src/shared/secondary/spp_worker_th/spp_port.c |  2 +-
 src/shared/secondary/spp_worker_th/spp_proc.c | 34 +++++++++----------
 src/shared/secondary/spp_worker_th/spp_proc.h |  3 +-
 src/vf/classifier_mac.c                       | 34 +++++++++----------
 src/vf/spp_forward.c                          | 10 +++---
 7 files changed, 51 insertions(+), 52 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 5c4f68a..29eac4e 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -383,13 +383,13 @@ mirror_proc(int id)
 
 	rx = &path->ports[0].rx;
 	/* Receive packets */
-	nb_rx = spp_eth_rx_burst(rx->dpdk_port, 0, bufs, MAX_PKT_BURST);
+	nb_rx = spp_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
 	/* mirror */
 	tx = &path->ports[1].tx;
-	if (tx->dpdk_port >= 0) {
+	if (tx->ethdev_port_id >= 0) {
 		nb_tx2 = 0;
 		for (cnt = 0; cnt < nb_rx; cnt++) {
 			org_mbuf = bufs[cnt];
@@ -438,14 +438,14 @@ mirror_proc(int id)
 #endif /* SPP_MIRROR_SHALLOWCOPY */
 		}
 		if (cnt != 0)
-			nb_tx2 = spp_eth_tx_burst(tx->dpdk_port, 0,
-							copybufs, cnt);
+			nb_tx2 = spp_eth_tx_burst(
+					tx->ethdev_port_id, 0, copybufs, cnt);
 	}
 
 	/* orginal */
 	tx = &path->ports[0].tx;
-	if (tx->dpdk_port >= 0)
-		nb_tx1 = spp_eth_tx_burst(tx->dpdk_port, 0, bufs, nb_rx);
+	if (tx->ethdev_port_id >= 0)
+		nb_tx1 = spp_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
 	nb_tx = nb_tx1;
 
 	if (nb_tx1 != nb_tx2)
diff --git a/src/shared/secondary/spp_worker_th/command_proc.c b/src/shared/secondary/spp_worker_th/command_proc.c
index 9c8672b..6ce407e 100644
--- a/src/shared/secondary/spp_worker_th/command_proc.c
+++ b/src/shared/secondary/spp_worker_th/command_proc.c
@@ -126,7 +126,7 @@ static int
 spp_check_flush_port(enum port_type iface_type, int iface_no)
 {
 	struct sppwk_port_info *port = get_iface_info(iface_type, iface_no);
-	return port->dpdk_port >= 0;
+	return port->ethdev_port_id >= 0;
 }
 
 /* Update classifier table with given action, add or del. */
@@ -607,11 +607,11 @@ sppwk_get_ethdev_port_id(enum port_type iface_type, int iface_no)
 				NULL, NULL, NULL, NULL, NULL);
 	switch (iface_type) {
 	case PHY:
-		return iface_info->nic[iface_no].dpdk_port;
+		return iface_info->nic[iface_no].ethdev_port_id;
 	case RING:
-		return iface_info->ring[iface_no].dpdk_port;
+		return iface_info->ring[iface_no].ethdev_port_id;
 	case VHOST:
-		return iface_info->vhost[iface_no].dpdk_port;
+		return iface_info->vhost[iface_no].ethdev_port_id;
 	default:
 		return SPP_RET_NG;
 	}
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index c4070ce..9c0e109 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -251,7 +251,7 @@ port_ability_set_ability(
 		enum spp_port_rxtx rxtx)
 {
 	int in_cnt, out_cnt = 0;
-	int port_id = port->dpdk_port;
+	int port_id = port->ethdev_port_id;
 	struct port_ability_port_mng_info *port_mng =
 						&g_port_mng_info[port_id];
 	struct port_ability_mng_info *mng         = NULL;
diff --git a/src/shared/secondary/spp_worker_th/spp_proc.c b/src/shared/secondary/spp_worker_th/spp_proc.c
index 689fb00..18acd64 100644
--- a/src/shared/secondary/spp_worker_th/spp_proc.c
+++ b/src/shared/secondary/spp_worker_th/spp_proc.c
@@ -354,7 +354,7 @@ dump_interface_info(const struct iface_info *iface_info)
 		RTE_LOG(DEBUG, APP, "phy  [%d] type=%d, no=%d, port=%d, "
 				"vid = %u, mac=%08lx(%s)\n",
 				cnt, port->iface_type, port->iface_no,
-				port->dpdk_port,
+				port->ethdev_port_id,
 				port->class_id.vlantag.vid,
 				port->class_id.mac_addr,
 				port->class_id.mac_addr_str);
@@ -367,7 +367,7 @@ dump_interface_info(const struct iface_info *iface_info)
 		RTE_LOG(DEBUG, APP, "vhost[%d] type=%d, no=%d, port=%d, "
 				"vid = %u, mac=%08lx(%s)\n",
 				cnt, port->iface_type, port->iface_no,
-				port->dpdk_port,
+				port->ethdev_port_id,
 				port->class_id.vlantag.vid,
 				port->class_id.mac_addr,
 				port->class_id.mac_addr_str);
@@ -380,7 +380,7 @@ dump_interface_info(const struct iface_info *iface_info)
 		RTE_LOG(DEBUG, APP, "ring [%d] type=%d, no=%d, port=%d, "
 				"vid = %u, mac=%08lx(%s)\n",
 				cnt, port->iface_type, port->iface_no,
-				port->dpdk_port,
+				port->ethdev_port_id,
 				port->class_id.vlantag.vid,
 				port->class_id.mac_addr,
 				port->class_id.mac_addr_str);
@@ -474,20 +474,20 @@ init_iface_info(void)
 	memset(p_iface_info, 0x00, sizeof(struct iface_info));
 	for (port_cnt = 0; port_cnt < RTE_MAX_ETHPORTS; port_cnt++) {
 		p_iface_info->nic[port_cnt].iface_type = UNDEF;
-		p_iface_info->nic[port_cnt].iface_no   = port_cnt;
-		p_iface_info->nic[port_cnt].dpdk_port  = -1;
+		p_iface_info->nic[port_cnt].iface_no = port_cnt;
+		p_iface_info->nic[port_cnt].ethdev_port_id = -1;
 		p_iface_info->nic[port_cnt].class_id.vlantag.vid =
-				ETH_VLAN_ID_MAX;
+			ETH_VLAN_ID_MAX;
 		p_iface_info->vhost[port_cnt].iface_type = UNDEF;
-		p_iface_info->vhost[port_cnt].iface_no   = port_cnt;
-		p_iface_info->vhost[port_cnt].dpdk_port  = -1;
+		p_iface_info->vhost[port_cnt].iface_no = port_cnt;
+		p_iface_info->vhost[port_cnt].ethdev_port_id = -1;
 		p_iface_info->vhost[port_cnt].class_id.vlantag.vid =
-				ETH_VLAN_ID_MAX;
+			ETH_VLAN_ID_MAX;
 		p_iface_info->ring[port_cnt].iface_type = UNDEF;
-		p_iface_info->ring[port_cnt].iface_no   = port_cnt;
-		p_iface_info->ring[port_cnt].dpdk_port  = -1;
+		p_iface_info->ring[port_cnt].iface_no = port_cnt;
+		p_iface_info->ring[port_cnt].ethdev_port_id = -1;
 		p_iface_info->ring[port_cnt].class_id.vlantag.vid =
-				ETH_VLAN_ID_MAX;
+			ETH_VLAN_ID_MAX;
 	}
 }
 
@@ -534,7 +534,7 @@ set_nic_interface(void)
 
 	for (nic_cnt = 0; nic_cnt < p_iface_info->num_nic; nic_cnt++) {
 		p_iface_info->nic[nic_cnt].iface_type   = PHY;
-		p_iface_info->nic[nic_cnt].dpdk_port = nic_cnt;
+		p_iface_info->nic[nic_cnt].ethdev_port_id = nic_cnt;
 	}
 
 	return SPP_RET_OK;
@@ -825,23 +825,23 @@ flush_port(void)
 	/* Initialize added vhost. */
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
 		port = &p_iface_info->vhost[cnt];
-		if ((port->iface_type != UNDEF) && (port->dpdk_port < 0)) {
+		if ((port->iface_type != UNDEF) && (port->ethdev_port_id < 0)) {
 			ret = spp_vf_add_vhost_pmd(port->iface_no,
 				g_mng_data_addr.p_startup_param->vhost_client);
 			if (ret < 0)
 				return SPP_RET_NG;
-			port->dpdk_port = ret;
+			port->ethdev_port_id = ret;
 		}
 	}
 
 	/* Initialize added ring. */
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
 		port = &p_iface_info->ring[cnt];
-		if ((port->iface_type != UNDEF) && (port->dpdk_port < 0)) {
+		if ((port->iface_type != UNDEF) && (port->ethdev_port_id < 0)) {
 			ret = add_ring_pmd(port->iface_no);
 			if (ret < 0)
 				return SPP_RET_NG;
-			port->dpdk_port = ret;
+			port->ethdev_port_id = ret;
 		}
 	}
 	return SPP_RET_OK;
diff --git a/src/shared/secondary/spp_worker_th/spp_proc.h b/src/shared/secondary/spp_worker_th/spp_proc.h
index a11be2b..d7952fb 100644
--- a/src/shared/secondary/spp_worker_th/spp_proc.h
+++ b/src/shared/secondary/spp_worker_th/spp_proc.h
@@ -195,11 +195,10 @@ struct sppwk_port_idx {
 };
 
 /* Define detailed port params in addition to `sppwk_port_idx`. */
-/* TODO(yasufum) revise name and usage of `dpdk_port`. */
 struct sppwk_port_info {
 	enum port_type iface_type;  /**< phy, vhost or ring */
 	int iface_no;
-	int dpdk_port;  /**< DPDK port number */
+	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct spp_port_class_identifier class_id;
 	struct spp_port_ability ability[SPP_PORT_ABILITY_MAX];
 };
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 30b6353..1e98636 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -335,20 +335,20 @@ init_component_info(struct component_info *cmp_info,
 
 	/* set rx */
 	if (component_info->num_rx_port == 0) {
-		clsd_data_rx->iface_type      = UNDEF;
-		clsd_data_rx->iface_no        = 0;
+		clsd_data_rx->iface_type = UNDEF;
+		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global = 0;
-		clsd_data_rx->port            = 0;
-		clsd_data_rx->num_pkt         = 0;
+		clsd_data_rx->port = 0;
+		clsd_data_rx->num_pkt = 0;
 	} else {
-		clsd_data_rx->iface_type      =
-				component_info->rx_ports[0]->iface_type;
-		clsd_data_rx->iface_no        = 0;
+		clsd_data_rx->iface_type =
+			component_info->rx_ports[0]->iface_type;
+		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global =
-				component_info->rx_ports[0]->iface_no;
-		clsd_data_rx->port            =
-				component_info->rx_ports[0]->dpdk_port;
-		clsd_data_rx->num_pkt         = 0;
+			component_info->rx_ports[0]->iface_no;
+		clsd_data_rx->port =
+			component_info->rx_ports[0]->ethdev_port_id;
+		clsd_data_rx->num_pkt = 0;
 	}
 
 	/* set tx */
@@ -362,7 +362,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_tx[i].iface_type      = tx_port->iface_type;
 		clsd_data_tx[i].iface_no        = i;
 		clsd_data_tx[i].iface_no_global = tx_port->iface_no;
-		clsd_data_tx[i].port            = tx_port->dpdk_port;
+		clsd_data_tx[i].port            = tx_port->ethdev_port_id;
 		clsd_data_tx[i].num_pkt         = 0;
 
 		if (tx_port->class_id.mac_addr == 0)
@@ -395,11 +395,11 @@ init_component_info(struct component_info *cmp_info,
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"default classified. vid=%hu, "
 					"iface_type=%d, iface_no=%d, "
-					"dpdk_port=%d\n",
+					"ethdev_port_id=%d\n",
 					vid,
 					tx_port->iface_type,
 					tx_port->iface_no,
-					tx_port->dpdk_port);
+					tx_port->ethdev_port_id);
 			continue;
 		}
 
@@ -423,12 +423,12 @@ init_component_info(struct component_info *cmp_info,
 		RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 				"Add entry to classifier mac table. "
 				"vid=%hu, mac_addr=%s, iface_type=%d, "
-				"iface_no=%d, dpdk_port=%d\n",
+				"iface_no=%d, ethdev_port_id=%d\n",
 				vid,
 				mac_addr_str,
 				tx_port->iface_type,
 				tx_port->iface_no,
-				tx_port->dpdk_port);
+				tx_port->ethdev_port_id);
 	}
 
 	return SPP_RET_OK;
@@ -462,7 +462,7 @@ transmit_packet(struct classified_data *clsd_data)
 		for (i = n_tx; i < clsd_data->num_pkt; i++)
 			rte_pktmbuf_free(clsd_data->pkts[i]);
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
-				"drop packets(tx). num=%hu, dpdk_port=%hu\n",
+				"drop packets(tx). num=%hu, ethdev_port_id=%hu\n",
 				(uint16_t)(clsd_data->num_pkt - n_tx),
 				clsd_data->port);
 	}
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index b9c0ad6..67fcd19 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -164,15 +164,15 @@ spp_forward(int id)
 		tx = &path->ports[cnt].tx;
 
 		/* Receive packets */
-		nb_rx = spp_eth_rx_burst(rx->dpdk_port, 0,
-						bufs, MAX_PKT_BURST);
+		nb_rx = spp_eth_rx_burst(rx->ethdev_port_id, 0,
+				bufs, MAX_PKT_BURST);
 		if (unlikely(nb_rx == 0))
 			continue;
 
 		/* Send packets */
-		if (tx->dpdk_port >= 0)
-			nb_tx = spp_eth_tx_burst(tx->dpdk_port,
-							0, bufs, nb_rx);
+		if (tx->ethdev_port_id >= 0)
+			nb_tx = spp_eth_tx_burst(tx->ethdev_port_id,
+					0, bufs, nb_rx);
 
 		/* Discard remained packets to release mbuf */
 		if (unlikely(nb_tx < nb_rx)) {
-- 
2.17.1


