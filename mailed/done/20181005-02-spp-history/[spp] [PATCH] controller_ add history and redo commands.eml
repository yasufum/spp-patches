Delivered-To: usufumu@gmail.com
Received: by 2002:ab3:3a1:0:0:0:0:0 with SMTP id 30-v6csp196900ltc;
        Fri, 5 Oct 2018 02:12:48 -0700 (PDT)
X-Google-Smtp-Source: ACcGV61ztZs4eFLzIbvaVbDRgHF6JHHLOnrmhzb+72a+z5bCZ4Y5qnznsbJ+vhNFSx/e1b4YU8i2
X-Received: by 2002:a1c:448a:: with SMTP id r132-v6mr7379826wma.132.1538730768695;
        Fri, 05 Oct 2018 02:12:48 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1538730768; cv=none;
        d=google.com; s=arc-20160816;
        b=t3tqBaVI2OtsJfUN7qRxCmOYx+r6YLPYfEqIbW4qiAsZkuSmIXjOfFwdTFUe1EpKq+
         8dLMoUmXX7yQgGsrv0jvhd8BerF08PObx1PfsZh7ePAzGosnL5LX377ROcYFllD7pztm
         SMOTUXM3Lp1N2q3fVco0SNX6IZtqnvC4d9os+zYGHKVh7mANUg3m63OTMLFpbfmfFeZ5
         oq/9tXLtwLAorykygVBZtvgNbnywIEZnk8CP4X/8gFnYzdNXoRXfTFp08e/FlLnQYW+h
         4CgFy4xkzA+9ar7qdpzdjEpQUGol181mRcD5DmtFSY09rQMoKyuGciBoiCriu+0pGjsQ
         HHlw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=sender:errors-to:list-subscribe:list-help:list-post:list-archive
         :list-unsubscribe:list-id:precedence:subject:message-id:date:to:from;
        bh=zUfTdHWEUfhNYqJBWJfNVSEv1Hd83LTb80ByNBpTT1M=;
        b=XDwscRy00vg9goAPCTfPn90MwCNlUhWU27DMLZCw3No6D/vbbjXjvFxHFaC6J65kgA
         CJeDQmAIH2do6LXaCfYwIbXDxgGrjGIlMisKoVoas7lBp+ARdolMF/DriXf+hmWtD8p2
         QDjGAxBJHkCy6pOq6bjB3w7xoFS+0rlTmI6ogh5zeBNF+gsm2TGJoWDu3Msg+fT70UNt
         7geb1OZKbFM4BTW7aJ8hqz5fRA6nGj+6yXZZ45MZXwt34RnGPNs4TBPy5ZcJqhFPh0vX
         KfL0My/6ab8Tc+qeWRtPV5LxmoRwBYyBTaFTlTpb0coY6uWwIX6KSJ41v0aodQoQ+yyo
         cT2w==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: domain of spp-bounces@dpdk.org designates 92.243.14.124 as permitted sender) smtp.mailfrom=spp-bounces@dpdk.org
Return-Path: <spp-bounces@dpdk.org>
Received: from dpdk.org (dpdk.org. [92.243.14.124])
        by mx.google.com with ESMTP id n2-v6si6685915wre.370.2018.10.05.02.12.48;
        Fri, 05 Oct 2018 02:12:48 -0700 (PDT)
Received-SPF: pass (google.com: domain of spp-bounces@dpdk.org designates 92.243.14.124 as permitted sender) client-ip=92.243.14.124;
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of spp-bounces@dpdk.org designates 92.243.14.124 as permitted sender) smtp.mailfrom=spp-bounces@dpdk.org
Received: from [92.243.14.124] (localhost [127.0.0.1])
	by dpdk.org (Postfix) with ESMTP id 4AA202C4F;
	Fri,  5 Oct 2018 11:12:48 +0200 (CEST)
Received: from bcmv-tmail01.ecl.ntt.co.jp (bcmv-tmail01.ecl.ntt.co.jp
 [124.146.185.148]) by dpdk.org (Postfix) with ESMTP id A26762C36
 for <spp@dpdk.org>; Fri,  5 Oct 2018 11:12:46 +0200 (CEST)
Received: from bcmv-ns01.ecl.ntt.co.jp (bcmv-ns01.ecl.ntt.co.jp
 [129.60.83.123])
 by bcmv-tmail01.ecl.ntt.co.jp (8.14.4/8.14.4) with ESMTP id w959ChNl016913;
 Fri, 5 Oct 2018 18:12:43 +0900
Received: from bcmv-ns01.ecl.ntt.co.jp (localhost [127.0.0.1])
 by bcmv-ns01.ecl.ntt.co.jp (Postfix) with ESMTP id 545E3129;
 Fri,  5 Oct 2018 18:12:43 +0900 (JST)
Received: from localhost.localdomain (unknown [129.60.13.51])
 by bcmv-ns01.ecl.ntt.co.jp (Postfix) with ESMTP id 3CA2610E;
 Fri,  5 Oct 2018 18:12:43 +0900 (JST)
From: ogawa.yasufumi@lab.ntt.co.jp
To: ferruh.yigit@intel.com, spp@dpdk.org, ogawa.yasufumi@lab.ntt.co.jp
Date: Fri,  5 Oct 2018 18:12:36 +0900
Message-Id: <20181005091236.13725-1-ogawa.yasufumi@lab.ntt.co.jp>
X-Mailer: git-send-email 2.13.1
X-TM-AS-MML: disable
Subject: [spp] [PATCH] controller: add history and redo commands
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-To: spp-bounces@dpdk.org
Sender: "spp" <spp-bounces@dpdk.org>

From: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>

SPP controller has no history for commands. It is useful if user inputs
several commands and check it step by step. It is also useful to redo
the commands by referring the history.

This update is to add history and redo commands. History command shows
the list of command with index number. Command history is saved as
'.spp_history' which is created in the project root directory.

  spp > history
    1  sec 1;status
    2  pri;status
    ...

User can redo a previous command with index number.

  spp > redo 1  # run 'sec 1;status' from redo command
  - status: running
  - port:
    - phy:0 -> ring:0

Signed-off-by: Yasufumi Ogawa <ogawa.yasufumi@lab.ntt.co.jp>
---
 .gitignore              |  1 +
 src/controller/shell.py | 92 ++++++++++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 92 insertions(+), 1 deletion(-)

diff --git a/.gitignore b/.gitignore
index 37bba66..b31ab54 100644
--- a/.gitignore
+++ b/.gitignore
@@ -5,3 +5,4 @@ docs/guides/_build/*
 docs/guides/images/**/*.pdf
 src/controller/3rd_party/*
 tools/sppc/build/*/*/env.sh
+.spp_history
diff --git a/src/controller/shell.py b/src/controller/shell.py
index fb30d5d..393699c 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -9,6 +9,7 @@ import json
 import os
 from queue import Empty
 import re
+import readline
 from .shell_lib import common
 from . import spp_common
 from .spp_common import logger
@@ -19,6 +20,8 @@ from . import topo
 class Shell(cmd.Cmd, object):
     """SPP command prompt"""
 
+    hist_file = '.spp_history'
+
     intro = 'Welcome to the spp.   Type help or ? to list commands.\n'
     prompt = 'spp > '
     recorded_file = None
@@ -35,10 +38,18 @@ class Shell(cmd.Cmd, object):
     SEC_SUBCMDS = ['vhost', 'ring', 'pcap', 'nullpmd']
     BYE_CMDS = ['sec', 'all']
 
+    HIST_EXCEPT = ['bye', 'exit', 'history', 'redo']
+
     PLUGIN_DIR = 'command'
     subgraphs = {}
     topo_size = '60%'
 
+    # setup history file
+    if os.path.exists(hist_file):
+        readline.read_history_file(hist_file)
+    else:
+        readline.write_history_file(hist_file)
+
     def default(self, line):
         """Define defualt behaviour
 
@@ -48,6 +59,7 @@ class Shell(cmd.Cmd, object):
 
         if common.is_comment_line(line):
             print("%s" % line.strip())
+
         else:
             super(Shell, self).default(line)
 
@@ -59,6 +71,25 @@ class Shell(cmd.Cmd, object):
         """
         pass
 
+    def clean_hist_file(self):
+        """Remove useless entries in history file."""
+
+        entries = []
+
+        try:
+            for line in open(self.hist_file):
+                l = line.strip()
+                if not (l.split(' ')[0] in self.HIST_EXCEPT):
+                    entries.append(l)
+            f = open(self.hist_file, "w+")
+            contents = '\n'.join(entries)
+            contents += '\n'
+            f.write(contents)
+            f.close()
+        except IOError:
+            print('Error: Cannot open history file "%s"' %
+                    self.hist_file)
+
     def close_all_secondary(self):
         """Terminate all secondary processes"""
 
@@ -587,7 +618,7 @@ class Shell(cmd.Cmd, object):
         return completions
 
     def do_cat(self, arg):
-        """View contents of a file
+        """View contents of a file.
 
         spp > cat file
         """
@@ -597,6 +628,64 @@ class Shell(cmd.Cmd, object):
         else:
             print("No such a directory.")
 
+    def do_redo(self, args):
+        """Execute command of index of history."""
+
+        idx = int(args)
+        cmdline = None
+        cnt = 1
+        try:
+            for line in open(self.hist_file):
+                if cnt == idx:
+                    cmdline = line.strip()
+                    break
+                cnt += 1
+
+            if cmdline.find('pri;') > -1:
+                cmdline = cmdline.replace(';', ' ;')
+                print(cmdline)
+            cmd_ary = cmdline.split(' ')
+            cmd = cmd_ary.pop(0)
+            cmd_options = ' '.join(cmd_ary)
+            eval('self.do_%s(cmd_options)' % cmd)
+        except IOError:
+            print('Error: Cannot open history file "%s"' %
+                    self.hist_file)
+
+    def do_history(self, arg):
+        """Show history.
+
+        spp > history
+          1  ls
+          2  cat file.txt
+          ...
+        """
+
+        # flush all of history to the hist_file.
+        readline.write_history_file(self.hist_file)
+
+        # remove commands defined in `self.HIST_EXCEPT`
+        self.clean_hist_file()
+
+        try:
+            f = open(self.hist_file)
+
+            # setup output format
+            nof_lines = len(f.readlines())
+            f.seek(0)
+            lines_digit = len(str(nof_lines))
+            hist_format = '  %' + str(lines_digit) + 'd  %s'
+
+            cnt = 1
+            for line in f:
+                l = line.strip()
+                print(hist_format % (cnt, l))
+                cnt += 1
+            f.close()
+        except IOError:
+            print('Error: Cannot open history file "%s"' %
+                    self.hist_file)
+
     def complete_cat(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
@@ -621,6 +710,7 @@ class Shell(cmd.Cmd, object):
 
         spp > exit
         """
+
         self.close()
         print('Thank you for using Soft Patch Panel')
         return True
-- 
2.7.4

